apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: assistant-auto-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
spec:
  tls:
  - hosts:
    - app.assistant-auto-ultime.com
    - api.assistant-auto-ultime.com
    secretName: assistant-auto-tls
  rules:
  - host: api.assistant-auto-ultime.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: assistant-auto-backend
            port:
              number: 5000
  - host: app.assistant-auto-ultime.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: assistant-auto-frontend
            port:
              number: 3000
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@assistant-auto-ultime.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
